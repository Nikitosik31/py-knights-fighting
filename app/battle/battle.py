from app.entities.knight import Knight


class Battle:
    """–ö–ª–∞—Å—Å, —É–ø—Ä–∞–≤–ª—è—é—â–∏–π –ø–æ–µ–¥–∏–Ω–∫–æ–º –¥–≤—É—Ö —Ä—ã—Ü–∞—Ä–µ–π."""

    def __init__(self, knight1: Knight, knight2: Knight) -> None:
        self.knight1 = knight1
        self.knight2 = knight2

    def start(self) -> None:
        """–ó–∞–ø—É—Å–∫ –ø–æ—à–∞–≥–æ–≤–æ–≥–æ –±–æ—è."""
        print(f"\n‚öîÔ∏è –ë–∏—Ç–≤–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –º–µ–∂–¥—É {self.knight1.name} –∏ {self.knight2.name}!\n")

        # –ø—Ä–∏–º–µ–Ω—è–µ–º –∑–µ–ª—å—è, –µ—Å–ª–∏ –µ—Å—Ç—å
        if self.knight1.potion:
            print(f"{self.knight1.name} –≤—ã–ø–∏–≤–∞–µ—Ç –∑–µ–ª—å–µ {self.knight1.potion.name}!")
            self.knight1.potion.apply(self.knight1)
        if self.knight2.potion:
            print(f"{self.knight2.name} –≤—ã–ø–∏–≤–∞–µ—Ç –∑–µ–ª—å–µ {self.knight2.potion.name}!")
            self.knight2.potion.apply(self.knight2)

        round_num = 1
        while self.knight1.is_alive() and self.knight2.is_alive():
            print(f"\n--- –†–∞—É–Ω–¥ {round_num} ---")

            self.knight1.attack(self.knight2)
            if not self.knight2.is_alive():
                print(f"\nüíÄ {self.knight2.name} –ø–∞–ª –≤ –±–æ—é. –ü–æ–±–µ–¥–∏—Ç–µ–ª—å ‚Äî {self.knight1.name}!")
                break

            self.knight2.attack(self.knight1)
            if not self.knight1.is_alive():
                print(f"\nüíÄ {self.knight1.name} –ø–∞–ª –≤ –±–æ—é. –ü–æ–±–µ–¥–∏—Ç–µ–ª—å ‚Äî {self.knight2.name}!")
                break

            round_num += 1

        # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç (—Å –æ–±–Ω—É–ª–µ–Ω–∏–µ–º –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π HP)
        return {
            self.knight1.name: max(self.knight1.hp, 0),
            self.knight2.name: max(self.knight2.hp, 0),
        }
